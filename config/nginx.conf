
# charset will be sent with content-type header for the types specified in charset_types
charset utf-8;

# when adding new types, load mime.types in the same scope
include mime.types;

# add new types:
types {
    # extra mimetype for .map files
    application/json map;
}

# compression
gzip on;      # compress on the fly if client supports it
# gzip_static on;    ngx_http_gzip_static_module is not installed on heroku
gzip_comp_level 5;
gzip_min_length 256;
gzip_proxied any;
gzip_vary on;
gzip_types application/javascript application/json text/css image/svg+xml image/x-icon;

# let the browser know this site always uses https
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

# instruct browser about passing the Referer header:
add_header Referrer-Policy "same-origin" always;

# force transport layer security
if ($http_x_forwarded_proto = "http") {
    return 301 https://$host$request_uri;
}

# security, always=for all response codes including error pages like the 403 and 404 page
add_header X-Frame-Options  "SAMEORIGIN"    always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Content-Type-Options "nosniff" always;

# cache and override the above headers
location /favicon.ico {
    add_header Pragma public;
    try_files $uri =404;
    expires 5w;
}

location /img/ {
    add_header Pragma public;
    try_files $uri =404;
    expires 12h;
}

location /css/ {
    add_header X-Content-Type-Options "nosniff" always;
    add_header Pragma public;
    try_files $uri =404;
    expires 12h;
}

location /js/ {
    add_header X-Content-Type-Options "nosniff" always;
    add_header Pragma public;
    try_files $uri =404;
    expires 12h;
}

location / {
    # first search in the webroot directory, if not found pass it on to webroot/index.php including arguments
    try_files $uri /index.php$is_args$args;
    expires -1;
}

# The 403 page. Try for example /.well-known/not-really
error_page 403 /error-page/403.html;

# The 404 page. Try for example /not-existing/not-there.php
error_page 404 /error-page/404.html;

# don't care about search engines visiting us
location = /robots.txt { 
  access_log off; 
  log_not_found off;
}

# RFC 5785, sent 403
location /.well-known/ {
    deny all;
}

# Heroku picks up all php files, see: 
# https://devcenter.heroku.com/articles/custom-php-settings#nginx-defaults

